/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 21);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
module.exports = function(src) {
	function log(error) {
		(typeof console !== "undefined")
		&& (console.error || console.log)("[Script Loader]", error);
	}

	// Check for IE =< 8
	function isIE() {
		return typeof attachEvent !== "undefined" && typeof addEventListener === "undefined";
	}

	try {
		if (typeof execScript !== "undefined" && isIE()) {
			execScript(src);
		} else if (typeof eval !== "undefined") {
			eval.call(null, src);
		} else {
			log("EvalError: No eval function available");
		}
	} catch (error) {
		log(error);
	}
}


/***/ }),

/***/ 21:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var script_loader_src_common_recenzije_recenzije_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(22);
/* harmony import */ var script_loader_src_common_recenzije_recenzije_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(script_loader_src_common_recenzije_recenzije_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_common_recenzije_recenzije_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(24);
/* harmony import */ var _src_common_recenzije_recenzije_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_src_common_recenzije_recenzije_css__WEBPACK_IMPORTED_MODULE_1__);

/*
 *
 * Files included only in packaged DOS bundles
 *
 */



// ------------------------------- //
// ---------- recenzije ---------- //
// ------------------------------- //





/***/ }),

/***/ 22:
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(0)(__webpack_require__(23))

/***/ }),

/***/ 23:
/***/ (function(module, exports) {

module.exports = "const devURL = \"https://dos-carnet.int.sedamit.hr/\"; // dev url\nconst testURL = \"https://dos-alat-test.sedamcloud.com/\"; // test url\nconst prodURL = \"https://dos-alat.sedamcloud.com/\" // production\nconst apiURL = \"explain/services/v2/unpackedhpub/\";\nconst servedHpubURL = \"explain/static/book/served/\";\nconst authTokenRef = \"authToken\";\n\nconst downloadLink = document.createElement('a');\ndownloadLink.target = '_blank';\ndownloadLink.style.display = 'none';\ndocument.body.appendChild(downloadLink);\n\nlet baseURL = null;\n\nif (document.location.href.includes(devURL)) {\n  baseURL = devURL;\n} else if (document.location.href.includes(testURL)) {\n  baseURL = testURL;\n} else if (document.location.href.includes(prodURL)) {\n  baseURL = prodURL;\n} else {\n  console.warn('Unrecognized URL, review disabled');\n}\n\n\n$(document).ready(function() {\n  if (baseURL) {\n    // disables reviewing locally\n    const footer = $(\"footer\");\n    $('<div id=\"modal_toggler\" class=\"dos-btn-def-basic\">Komentiranje</div>').appendTo(footer);\n    initRecenzije();\n  }\n});\n\nfunction initRecenzije() {\n  const cookieToken = getCookie();\n  const documentBody = $(document).find(\"body\");\n  const modal = cookieToken ? createModal(cookieToken) : createModal();\n\n  modal.appendTo(documentBody);\n\n  $(\"#modal_toggler\").click(function() {\n    toggleModal(modal);\n  });\n}\n\nfunction toggleModal(modal) {\n  const cookieToken = getCookie();\n  if (cookieToken) {\n    // if there is a cookie, autofill token input field\n    $(\"#token\").val(cookieToken);\n    $('#potvrdi').click();\n  }\n\n  if (modal.css(\"display\") == \"none\") {\n    modal.css({\n      display: \"flex\"\n    });\n  } else {\n    modal.css(\"display\", \"none\");\n  }\n}\n\nfunction createModal(cookie) {\n  // Authentication (1st part of modal)\n  // create elements\n  const modal = $('<div class=\"recenzija_modal\">');\n  const modalAuthForm = $('<div class=\"modal_auth\">');\n\n  const tokenInputDiv = $(\"<div>\");\n  const tokenLabel = $(\"<span> Molimo Vas da unesete token: </span>\");\n  const tokenInput = $('<input id=\"token\">');\n\n  const buttonsDiv = $(\"<div>\");\n  const submitButton = $('<button id=\"potvrdi\"> Potvrdi </button>');\n  const cancelButton = $(\"<button> Odustani </button>\");\n\n  const tooltipDiv = $('<div class=\"modal_tooltips\">');\n\n  // append (render) elements\n  tokenInputDiv.appendTo(modalAuthForm);\n  tokenLabel.appendTo(tokenInputDiv);\n  tokenInput.appendTo(tokenInputDiv);\n\n  buttonsDiv.appendTo(tokenInputDiv);\n  submitButton.appendTo(buttonsDiv);\n  cancelButton.appendTo(buttonsDiv);\n\n  tooltipDiv.appendTo(tokenInputDiv);\n\n  modalAuthForm.appendTo(modal);\n\n  // events\n  submitButton.click(function() {\n    if (tooltipDiv.children().length > 0) {\n      // remove tooltip message if any\n      tooltipDiv.children()[0].remove();\n    }\n\n    if (tokenInput.val()) {\n      if (cookie != tokenInput.val() || getCookie() != tokenInput.val()) {\n        // if entered a new auth token, create a new cookie\n        createAuthCookie(tokenInput.val());\n      }\n      fetchComments(\n        undefined,\n        function(response) {\n          // success callback\n          createCommentForm(modal, response.data.items);\n        },\n        function(message) {\n          // error callback\n          const messageEl = $(\"<span>\", {\n            html: message\n          });\n\n          messageEl.appendTo(tooltipDiv);\n        }\n      );\n    } else {\n      // display no token message\n      const noTokenMessage = \"Molimo Vas unesite token.\";\n      const messageEl = $(\"<span>\");\n\n      messageEl.html(noTokenMessage);\n      messageEl.appendTo(tooltipDiv);\n    }\n  });\n  cancelButton.click(function() {\n    if (tooltipDiv.children().length > 0) {\n      // remove tooltip message if any\n      tooltipDiv.children()[0].remove();\n    }\n    toggleModal(modal);\n  });\n\n  return modal;\n}\n\nfunction createCommentForm(modal, data) {\n  // Comments container (2nd part of modal)\n  const authForm = modal.find(\".modal_auth\");\n  authForm.detach();\n  // create elements\n  const commentForm = $('<div class=\"modal_comments_container\">');\n\n  const commentsFormHeader = $('<div class=\"modal_comments_label\">');\n  const commentsFormHeaderLabel = $(\"<span>\", {\n    html: \"Prijavljeni ste s tokenom: \" + getCookie()\n  });\n  const headerButtonsDiv = $('<div>');\n  const headerButtonsDiv2 = $('<div>');\n  const invalidateButton = $(\"<button> Završi komentiranje </button>\");\n  const logoutButton = $(\"<button> Odjava </button>\");\n\n  const commentsFlexDiv = $('<div class=\"flex_div\">');\n\n  const commentsContainer = $('<div class=\"current_modal_comments\">');\n  const commentsHeader = $(\n    '<div class=\"comments_header\"> Komentari: </div>'\n  );\n  const commentsDiv = $('<div class=\"modal_comments\">');\n  const comments =\n    data.length > 0\n      ? (function() {\n          const comments = data[0].comments;\n          let commentArray = [];\n          for (let i = 0; i < comments.length; i++) {\n            const commentEl = createCommentElement(\n              modal,\n              comments[i],\n              authForm,\n              true,\n              commentsDiv\n            );\n            commentArray.push(commentEl);\n          }\n          return commentArray;\n        })()\n      : null;\n\n  const oldCommentsContainer = $('<div class=\"old_modal_comments\">');\n  const oldCommentsHeader = $('<div class=\"comments_header\">');\n  const breakLine = $('<div class=\"vertical_line\">');\n  const oldCommentsDiv = $('<div class=\"modal_comments\">');\n\n  const buttonsDiv = $('<div class=\"modal_buttons\">');\n  const createCommentButton = $(\"<button> Dodaj novi komentar </button>\");\n  const toggleOldCommentsButton = $(\n    \"<button> Dohvati stare komentare </button>\"\n  );\n  const cancelButton = $(\"<button> Zatvori </button>\");\n\n  // append (render) elements\n  //commentsFormHeaderLabel.appendTo(commentsFormHeader);\n  createCommentButton.appendTo(headerButtonsDiv);\n  invalidateButton.appendTo(headerButtonsDiv);\n  logoutButton.appendTo(headerButtonsDiv2);\n  cancelButton.appendTo(headerButtonsDiv2);\n  headerButtonsDiv.appendTo(commentsFormHeader);\n  headerButtonsDiv2.appendTo(commentsFormHeader);\n\n  if (comments && comments.length > 0) {\n    for (let i = 0; i < comments.length; i++) {\n      $(comments[i]).appendTo(commentsDiv);\n    }\n  } else {\n    const noCommentsPrompt = $(\n      '<div class=\"recenzija_comment\" commentid=\"-1\"><div class=\"comment_text\"> Nema komentara </div></div>'\n    );\n    noCommentsPrompt.appendTo(commentsDiv);\n  }\n\n  commentsHeader.appendTo(commentsContainer);\n  commentsDiv.appendTo(commentsContainer);\n\n  oldCommentsHeader.appendTo(oldCommentsContainer);\n  oldCommentsDiv.appendTo(oldCommentsContainer);\n\n  //createCommentButton.appendTo(buttonsDiv);\n  //toggleOldCommentsButton.appendTo(buttonsDiv);\n  //cancelButton.appendTo(buttonsDiv);\n\n  commentsFormHeader.appendTo(commentForm); // containers\n\n  commentsContainer.appendTo(commentsFlexDiv);\n  commentsFlexDiv.appendTo(commentForm);\n  //buttonsDiv.appendTo(commentForm);\n\n  commentForm.appendTo(modal);\n  commentForm.resizable({\n\t  handles: \"n, e, ne\"\n  });\n\n  // events\n  logoutButton.click(function() {\n    deleteCookie(authTokenRef);\n    commentForm.remove();\n    authForm.find(\"#token\").val(\"\");\n    authForm.appendTo(modal);\n  });\n\n  invalidateButton.click(function() {\n    const message = 'Ovime ćete poništiti Vaš token. Jeste li sigurni?';\n    confirmPrompt(message, modal, function() {\n      invalidateToken(function() {\n        commentForm.detach();\n        authForm.appendTo(modal);\n        toggleModal(modal);\n      });\n    })\n  });\n\n  toggleOldCommentsButton.click(function() {\n    toggleDatePickerForm(modal, function(dateQuery) {\n      // create and add old comments section to comment form\n      const oldComments = oldCommentsContainer\n        .find(\".modal_comments\")\n        .children();\n      if (oldComments && oldComments.length > 0) {\n        for (let i = 0; i < oldComments.length; i++) {\n          oldComments[i].remove();\n        }\n      }\n\n      fetchComments(\n        dateQuery,\n        function(response) {\n          // success callback\n          oldCommentsHeader.html(\"Komentari inačice: \" + dateQuery);\n          const relevantData = response.data.items.filter(function(loc) {\n            return loc.locationLink == document.location.href;\n          });\n          const comments =\n            relevantData[0] && relevantData[0].comments\n              ? relevantData[0].comments\n              : [];\n\n          if (comments && comments.length > 0) {\n            for (let i = 0; i < comments.length; i++) {\n              const newComment = createCommentElement(\n                modal,\n                comments[i],\n                authForm,\n                false,\n                commentsDiv\n              );\n              newComment.appendTo(oldCommentsDiv);\n            }\n          } else {\n            const noCommentsPrompt = $(\n              '<div class=\"recenzija_comment\" commentid=\"-1\"><div class=\"comment_text\"> Nema komentara </div></div>'\n            );\n            noCommentsPrompt.appendTo(oldCommentsDiv);\n          }\n        },\n        function() {\n          // error callback\n          const tooltip = $(\"<span> Nema unesenih komentara </span>\");\n          tooltip.appendTo(oldCommentsDiv);\n        }\n      );\n\n      if (commentsFlexDiv.find(oldCommentsContainer).length == 0) {\n        // only render the first time\n        buttonsDiv.detach();\n        breakLine.appendTo(commentsFlexDiv);\n        oldCommentsContainer.appendTo(commentsFlexDiv);\n        buttonsDiv.appendTo(commentForm);\n      }\n    });\n  });\n  createCommentButton.click(function() {\n    toggleCommentForm(modal, commentsDiv, authForm);\n  });\n  cancelButton.click(function() {\n    const chechForCommentForm = modal.find(\".modal_comment_form\");\n    const checkForPrompt = modal.find(\".modal_prompt\");\n    if (chechForCommentForm.length > 0) {\n      chechForCommentForm.remove();\n    }\n    if (checkForPrompt.length > 0) {\n      checkForPrompt.remove();\n    }\n    toggleModal(modal);\n    commentForm.remove();\n    authForm.appendTo(modal);\n  });\n}\n\nfunction createCommentElement(\n  modal,\n  commentData,\n  authForm,\n  withButtons,\n  parent\n) {\n  // create elements\n  const commentDiv = $(\"<div>\", {\n    class: \"recenzija_comment\",\n    commentId: commentData.unpackedHpubCommentId\n  });\n  const commentText = $(\"<div>\", {\n    class: \"comment_text\",\n    html: commentData.text\n  });\n\n  commentText.appendTo(commentDiv);\n\n  const buttonsDiv = $('<div class=\"control_buttons\">');\n  const editButton = $(\"<button> Uredi </button>\");\n  const deleteButton = $(\"<button> Obriši </button>\");\n\n  // append (render) elements (conditional)\n  if (withButtons) {\n    buttonsDiv.appendTo(commentDiv);\n    editButton.appendTo(buttonsDiv);\n    deleteButton.appendTo(buttonsDiv);\n\n    // events\n    editButton.click(function() {\n      editComment(commentDiv, modal, function(message) {\n        const commentForm = modal.find(\".modal_comments_container\");\n        commentForm.remove();\n        authForm.appendTo(modal);\n\n        const tooltips = authForm.find(\".modal_tooltips\");\n        if (tooltips.children().length > 0) {\n          // remove tooltip message if any\n          tooltips.children()[0].remove();\n        }\n        const tooltipMessage = $(\"<span>\", {\n          html: message\n        });\n\n        tooltipMessage.appendTo(tooltips);\n      });\n    });\n\n    deleteButton.click(function() {\n      deleteComment(commentDiv, modal, parent, function(message) {\n        // error callback\n        const commentForm = modal.find(\".modal_comments_container\");\n        commentForm.remove();\n        authForm.appendTo(modal);\n\n        const tooltips = authForm.find(\".modal_tooltips\");\n        if (tooltips.children().length > 0) {\n          // remove tooltip message if any\n          tooltips.children()[0].remove();\n        }\n        const tooltipMessage = $(\"<span>\", {\n          html: message\n        });\n\n        tooltipMessage.appendTo(tooltips);\n      });\n    });\n  }\n\n  return commentDiv;\n}\n\nfunction toggleCommentForm(modal, commentsDiv, authForm) {\n  // create elements\n  const createCommentDiv = $('<div class=\"modal_comment_form\">');\n\n  const textLabel = $(\"<div> Unesite komentar: </div>\");\n  const textInput = $(\"<textarea>\");\n\n  const buttonsDiv = $('<div class=\"modal_buttons\">');\n  const createButton = $(\"<button> Spremi </button>\");\n  const cancelButton = $(\"<button> Odustani </button>\");\n\n  // append (render) elements\n  textLabel.appendTo(createCommentDiv);\n  textInput.appendTo(createCommentDiv);\n\n  buttonsDiv.appendTo(createCommentDiv);\n  createButton.appendTo(buttonsDiv);\n  cancelButton.appendTo(buttonsDiv);\n\n  createCommentDiv.appendTo(modal);\n\n  // events\n  createButton.click(function() {\n    createComment(\n      textInput.val(),\n      function(response) {\n        // success callback\n        createCommentDiv.remove();\n        const newComment = createCommentElement(\n          modal,\n          response.data,\n          authForm,\n          true,\n          commentsDiv\n        );\n        if (commentsDiv.find('div[commentid=\"-1\"]')) {\n          commentsDiv.find('div[commentid=\"-1\"]').remove();\n        }\n        newComment.appendTo(commentsDiv);\n      },\n      function(message) {\n        // error callback\n        createCommentDiv.remove();\n        modal.find(\".modal_comments_container\").remove();\n        authForm.appendTo(modal);\n\n        const tooltips = authForm.find(\".modal_tooltips\");\n        if (tooltips.children().length > 0) {\n          // remove tooltip message if any\n          tooltips.children()[0].remove();\n        }\n        const tooltipMessage = $(\"<span>\", {\n          html: message\n        });\n\n        tooltipMessage.appendTo(tooltips);\n      }\n    );\n  });\n\n  cancelButton.click(function() {\n    createCommentDiv.remove();\n  });\n}\n\nfunction toggleDatePickerForm(modal, callback) {\n  // create elements\n  const promptDiv = $('<div class=\"modal_prompt\">');\n\n  const dayDiv = $('<div class=\"flex_div\">');\n  const monthDiv = $('<div class=\"flex_div\">');\n  const yearDiv = $('<div class=\"flex_div\">');\n\n  const dayDivLabel = $(\"<span> Unesite dan </span>\");\n  const monthDivLabel = $(\"<span> Unesite mjesec </span>\");\n  const yearDivLabel = $(\"<span> Unesite godinu </span>\");\n\n  const dayInput = $(\"<select>\");\n  const monthInput = $(\"<select>\");\n  const yearInput = $(\"<input>\");\n\n  const dayOptions = (function() {\n    let days = [];\n    for (let i = 0; i < 30; i++) {\n      days.push(\n        $(\"<option>\", {\n          value: i + 1,\n          html: i + 1\n        })\n      );\n    }\n    return days;\n  })();\n  const monthOptions = (function() {\n    let months = [];\n    for (let i = 0; i < 12; i++) {\n      months.push(\n        $(\"<option>\", {\n          value: i + 1,\n          html: i + 1\n        })\n      );\n    }\n    return months;\n  })();\n\n  const buttonsDiv = $('<div class=\"modal_buttons\">');\n  const submitButton = $(\"<button> Unesi </button>\");\n  const cancelButton = $(\"<button> Odustani </button>\");\n\n  const tooltip = $('<div class=\"modal_tooltips\">');\n\n  // render\n  tooltip.appendTo(promptDiv);\n\n  dayDivLabel.appendTo(dayDiv);\n  for (let i = 0; i < dayOptions.length; i++) {\n    dayOptions[i].appendTo(dayInput);\n  }\n  dayInput.appendTo(dayDiv);\n\n  monthDivLabel.appendTo(monthDiv);\n  for (let i = 0; i < monthOptions.length; i++) {\n    monthOptions[i].appendTo(monthInput);\n  }\n  monthInput.appendTo(monthDiv);\n\n  yearDivLabel.appendTo(yearDiv);\n  yearInput.appendTo(yearDiv);\n\n  submitButton.appendTo(buttonsDiv);\n  cancelButton.appendTo(buttonsDiv);\n\n  dayDiv.appendTo(promptDiv); // containers\n  monthDiv.appendTo(promptDiv);\n  yearDiv.appendTo(promptDiv);\n  buttonsDiv.appendTo(promptDiv);\n\n  promptDiv.appendTo(modal);\n\n  // events\n  submitButton.click(function() {\n    const yearRegex = new RegExp(\"^[0-9]{4}\");\n    const dateQuery =\n      dayInput.val() + \"-\" + monthInput.val() + \"-\" + yearInput.val();\n    if (yearRegex.test(yearInput.val())) {\n      callback(dateQuery);\n      promptDiv.remove();\n    } else {\n      tooltip.html(\"Neispravan unos godine\");\n    }\n  });\n  cancelButton.click(function() {\n    promptDiv.remove();\n  });\n}\n\nfunction confirmPrompt(message, modal, callback) {\n  // create elements\n  const promptContainer = $('<div class=\"recenzije-confirmPrompt\">');\n  const messageContainer = $('<span>', {\n    html: message,\n  });\n  const buttonsContainer = $('<div class=\"recenzije-confirmPrompt__buttons\">');\n  const yesButton = $('<button>', {\n    html: 'Potvrdi',\n    click: function() {\n      callback();\n      promptContainer.remove();\n    }\n  });\n  const noButton = $('<button>', {\n    html: 'Odustani'\n  });\n\n  // render\n  messageContainer.appendTo(promptContainer);\n  yesButton.appendTo(buttonsContainer);\n  noButton.appendTo(buttonsContainer);\n  buttonsContainer.appendTo(promptContainer);\n  promptContainer.appendTo(modal);\n\n  // events\n  noButton.click(function() {\n    promptContainer.remove();\n  })\n}\n\n// API CALLS\n\nfunction invalidateToken(callback) {\n  downloadComments(function() {\n    $.post({\n      url: baseURL + apiURL + 'token/invalidate',\n      data: JSON.stringify({\n        generatedToken: getCookie()\n      }),\n      dataType: \"json\",\n      contentType: \"application/json;charset=UTF-8\",\n      success: function() {\n        callback();\n      },\n      error: function() {\n        console.error('Došlo je do greške s poslužiteljem');\n      }\n    })\n  })\n}\n\nfunction downloadComments(callback) {\n  $.post({\n    url: baseURL + apiURL + 'comment/list/csv',\n    data: JSON.stringify({\n      token: getCookie(),\n      derId: getHpubInfo().downloadId,\n    }),\n    dataType: \"json\",\n    contentType: \"application/json;charset=UTF-8\",\n    success: function(data) {\n      callback();\n    },\n    error: function(data) { // for unknown reasons this api call triggers error function even tough status is 200 (success)\n      const csvString = unescape(encodeURIComponent(data.responseText));\n\n      downloadLink.href = 'data:attachment/csv;base64,77u/' + window.btoa(csvString);\n      downloadLink.download = getCookie() + '.csv';\n      setTimeout(function() {downloadLink.click()}, 2000);\n      callback();\n    }\n  })\n}\n\nfunction fetchComments(date, callback, errorCallback) {\n  const hpubInfo = getHpubInfo();\n  $.post({\n    url: baseURL + apiURL + \"comment/list/mine\",\n    data: JSON.stringify({\n      derId: hpubInfo.reviewDerId.toString(),\n      dateFrom: \"\",\n      token: getCookie()\n    }),\n    dataType: \"json\",\n    contentType: \"application/json;charset=UTF-8\",\n    success: function(response) {\n      if (response.err == 0) {\n        callback(response);\n      } else if (response.err == 803 || response.err == 804) {\n        errorCallback(\"Nevažeći token\");\n      } else {\n        errorCallback(\"Došlo je do pogreške s poslužiteljem.\");\n      }\n    },\n    error: function() {\n      errorCallback(\"Došlo je do pogreške s poslužiteljem.\");\n    }\n  });\n}\n\nfunction createComment(text, callback, errorCallback) {\n  $.post({\n    url: baseURL + apiURL + \"comment/create\",\n    data: JSON.stringify({\n      authenticationToken: getCookie(),\n      text: text,\n      locationLink: document.location.href\n    }),\n    dataType: \"json\",\n    contentType: \"application/json;charset=UTF-8\",\n    success: function(response) {\n      if (response.err == 0) {\n        callback(response);\n      } else {\n        errorCallback(\"Token je nevažeći ili je istekao\");\n      }\n    },\n    error: function() {\n      errorCallback(\"Došlo je do greške s poslužiteljem\");\n    }\n  });\n}\n\nfunction editComment(comment, modal, errorCallback) {\n  const commentText = comment.find(\".comment_text\");\n  // create elements\n  const commentFormDiv = $('<div class=\"modal_comment_form\">');\n  const textLabel = $(\"<div> Uredite komentar: </div>\");\n\n  const textInput = $(\"<textarea>\");\n  textInput.val(commentText.html());\n\n  const buttonsDiv = $('<div class=\"modal_buttons\">');\n  const submitButton = $(\"<button> Spremi </button>\");\n  const cancelButton = $(\"<button> Odustani </button>\");\n\n  // append (render) elements\n  textLabel.appendTo(commentFormDiv);\n  textInput.appendTo(commentFormDiv);\n\n  buttonsDiv.appendTo(commentFormDiv);\n  submitButton.appendTo(buttonsDiv);\n  cancelButton.appendTo(buttonsDiv);\n\n  commentFormDiv.appendTo(modal);\n\n  // events\n  submitButton.click(function() {\n    //baseURL + apiURL + 'update', { authenticationToken: getCookie(), unpackedHpubCommentId: comment.attr('commentId'), text: textInput.val() }\n    $.post({\n      url: baseURL + apiURL + \"comment/update\",\n      data: JSON.stringify({\n        authenticationToken: getCookie(),\n        unpackedHpubCommentId: comment.attr(\"commentId\"),\n        text: textInput.val()\n      }),\n      dataType: \"json\",\n      contentType: \"application/json;charset=UTF-8\",\n      success: function(response) {\n        if (response.err == 0) {\n          commentText.html(textInput.val());\n        } else {\n          errorCallback(\"Token je nevažeći ili je istekao.\");\n        }\n        commentFormDiv.remove();\n      },\n      error: function(response) {\n        errorCallback(\"Došlo je do pogreške s poslužiteljem.\");\n        commentFormDiv.remove();\n      }\n    });\n  });\n\n  cancelButton.click(function() {\n    commentFormDiv.remove();\n  });\n}\n\nfunction deleteComment(comment, modal, parent, errorCallback) {\n  // toggle prompt\n  // create elements\n  const promptDiv = $('<div class=\"modal_prompt\">');\n  const div = $(\"<div>\");\n  const promptText = $(\n    \"<span>Jeste li sigurni da želite obrisati ovaj komentar?</span>\"\n  );\n\n  const buttonsDiv = $(\"<div>\");\n  const submitButton = $(\"<button> Potvrdi </button>\");\n  const cancelButton = $(\"<button> Odustani </button>\");\n\n  // append (render) elements\n  promptText.appendTo(div);\n\n  buttonsDiv.appendTo(div);\n  submitButton.appendTo(buttonsDiv);\n  cancelButton.appendTo(buttonsDiv);\n\n  div.appendTo(promptDiv);\n  promptDiv.appendTo(modal);\n\n  // events\n  submitButton.click(function() {\n    $.post({\n      url: baseURL + apiURL + \"comment/delete\",\n      data: JSON.stringify({\n        authenticationToken: getCookie(),\n        unpackedHpubCommentId: comment.attr(\"commentId\")\n      }),\n      dataType: \"json\",\n      contentType: \"application/json;charset=UTF-8\",\n      success: function(response) {\n        if (response.err == 0) {\n          comment.remove();\n          if (parent.children().length == 0) {\n            const noCommentsTooltip = $(\n              '<div class=\"recenzija_comment\" commentid=\"-1\"><div class=\"comment_text\"> Nema komentara </div></div>'\n            );\n            noCommentsTooltip.appendTo(parent);\n          }\n          promptDiv.remove();\n        } else {\n          errorCallback(\"Token je nevažeći ili je istekao.\");\n          promptDiv.remove();\n        }\n      },\n      error: function() {\n        errorCallback(\"Došlo je do greške s poslužiteljem\");\n        promptDiv.remove();\n      }\n    });\n  });\n\n  cancelButton.click(function() {\n    promptDiv.remove();\n  });\n}\n\n// UTILS\nfunction createAuthCookie(cookieValue) {\n  const cookieName = authTokenRef + \"=\";\n  const cookieDuration = new Date();\n  cookieDuration.setTime(cookieDuration.getTime() + 1000 * 60 * 60 * 24); // add 1 day duration in miliseconds to current time\n  const cookieExpirationValue = \"expires=\" + cookieDuration;\n  document.cookie =\n    cookieName + cookieValue + \"; \" + cookieExpirationValue + \"; path=/;\";\n}\n\nfunction getCookie() {\n  if (document.cookie.includes(authTokenRef)) {\n    const cookies = document.cookie.split(\"; \");\n    const authCookie = cookies.filter(function(cookie) {\n      return cookie.includes(authTokenRef);\n    });\n    return authCookie[0].substring(\n      authCookie[0].indexOf(\"=\") + 1,\n      authCookie[0].length\n    );\n  }\n}\n\nfunction deleteCookie(cookieName) {\n  const cookieDuration = new Date();\n  cookieDuration.setTime(0); // set time to past (1970) so cookie is expired (deleted)\n  const cookieExpirationValue = \"expires=\" + cookieDuration;\n  document.cookie = cookieName + \"=; \" + cookieExpirationValue + \"; path=/;\";\n}\n\nfunction getHpubInfo() {\n  // global config var REVIEW_INFO should be set\n  const info = {\n    reviewDerId: REVIEW_INFO && REVIEW_INFO.reviewDerId,\n    reviewDate: REVIEW_INFO && REVIEW_INFO.reviewDate,\n    downloadId: REVIEW_INFO && REVIEW_INFO.downloadId\n  };\n\n  return info;\n}\n"

/***/ }),

/***/ 24:
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,